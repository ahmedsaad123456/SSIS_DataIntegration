<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/26/2024 11:55:18 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-SVQ0715Q"
  DTS:CreatorName="LAPTOP-SVQ0715Q\Ahmed_Saad"
  DTS:DTSID="{4F7B0D66-410C-40AE-8845-9A2A97F5A1F4}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5397.1"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="4"
  DTS:VersionGUID="{D2F2CE8D-1959-4F1E-8554-7165545E07AC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{FEECCDD9-1C90-473E-87DA-6F95266D9CCF}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_eb203162bc194594bdd97f9fafce6cd8"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_eb203162bc194594bdd97f9fafce6cd8")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_eb203162bc194594bdd97f9fafce6cd8")]
[assembly: AssemblyCopyright("Copyright @  2024")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="ST_eb203162bc194594bdd97f9fafce6cd8.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2558A58B-5CBC-46CE-9DD3-F3DE7941F639}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_eb203162bc194594bdd97f9fafce6cd8</RootNamespace>
    <AssemblyName>ST_eb203162bc194594bdd97f9fafce6cd8</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile>
    </TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\Ahmed_Saad\AppData\Local\Temp\Vsta\SSIS_ST160\Vsta6EEUjLwpq0uVXZajIztdgQ\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net47" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using Newtonsoft.Json;
#endregion

namespace ST_eb203162bc194594bdd97f9fafce6cd8
{
    
        public class University
        {
            public string name { get; set; }
            public string alpha_two_code { get; set; }
            public string country { get; set; }
        }

       

        /// <summary>
        /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
        /// or parent of this class.
        /// </summary>
        [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
        public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
        {
            #region Help:  Using Integration Services variables and parameters in a script
            /* To use a variable in this script, first ensure that the variable has been added to 
             * either the list contained in the ReadOnlyVariables property or the list contained in 
             * the ReadWriteVariables property of this script task, according to whether or not your
             * code needs to write to the variable.  To add the variable, save this script, close this instance of
             * Visual Studio, and update the ReadOnlyVariables and 
             * ReadWriteVariables properties in the Script Transformation Editor window.
             * To use a parameter in this script, follow the same steps. Parameters are always read-only.
             * 
             * Example of reading from a variable:
             *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
             * 
             * Example of writing to a variable:
             *  Dts.Variables["User::myStringVariable"].Value = "new value";
             * 
             * Example of reading from a package parameter:
             *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
             *  
             * Example of reading from a project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
             * 
             * Example of reading from a sensitive project parameter:
             *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
             * */

            #endregion

            #region Help:  Firing Integration Services events from a script
            /* This script task can fire events for logging purposes.
             * 
             * Example of firing an error event:
             *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
             * 
             * Example of firing an information event:
             *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
             * 
             * Example of firing a warning event:
             *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
             * */
            #endregion

            #region Help:  Using Integration Services connection managers in a script
            /* Some types of connection managers can be used in this script task.  See the topic 
             * "Working with Connection Managers Programatically" for details.
             * 
             * Example of using an ADO.Net connection manager:
             *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
             *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
             *
             * Example of using a File connection manager
             *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
             *  string filePath = (string)rawConnection;
             *  //Use the connection in some code here, then release the connection
             *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
             * */
            #endregion

            public void Main()
            {

                try
                {
                    ServicePointManager.Expect100Continue = true;
                    ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;
                    

                    // get data from the API and put it in the json

                    var json = "";
                    using (WebClient wc = new WebClient())
                    {
                        json = wc.DownloadString("http://universities.hipolabs.com/search");
                    }

                    // put the data in the list of University
                    List<University> universities = JsonConvert.DeserializeObject<List<University>>(json);

                    
                    // start connection with database called "test"
                    string connectionString = @"Data Source=LAPTOP-SVQ0715Q;Initial Catalog=test;Integrated Security=True;";

                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {
                        // open connection

                        connection.Open();
                        


                        // loop in every university in the university list
                        foreach (University university in universities)
                        {
                            try
                            {
                                // Create the insert statement into table "University"
                                string insertStatement = $"INSERT INTO University(Name, AlphaTwoCode, Country) VALUES('{university.name.Replace("'", "''")}', '{university.alpha_two_code.Replace("'", "''")}', '{university.country.Replace("'", "''")}')";

                                SqlCommand command = new SqlCommand(insertStatement, connection);

                                // Execute the insert statement
                                int rowsAffected = command.ExecuteNonQuery();


                            }
                            catch (Exception ex)
                            {
                                string errorMessage = $"Error inserting university {university.name}: {ex.Message}";
                                Dts.Events.FireError(0, "Insert Error", errorMessage, "", 0);

                            }
                        }

                        // Commit the transaction
                        connection.Close();
                    }

                }
                catch (Exception exception)
                {
                    string errorMessage = $"Outer error: {exception.Message}";
                    Dts.Events.FireError(0, "Outer Error", errorMessage, "", 0);

                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
        
        
        }

       #region ScriptResults declaration
            /// <summary>
            /// This enum provides a convenient shorthand within the scope of this class for setting the
            /// result of the script.
            /// 
            /// This code was generated automatically.
            /// </summary>
            enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_eb203162bc194594bdd97f9fafce6cd8</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_eb203162bc194594bdd97f9fafce6cd8</msb:DisplayName>
    <msb:ProjectId>{59C089AC-0932-4422-ACD6-054A368A20EE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_eb203162bc194594bdd97f9fafce6cd8.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Settings.get_Default():ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Sett" +
    "ings")]

namespace ST_eb203162bc194594bdd97f9fafce6cd8.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_eb203162bc194594bdd97f9fafce6cd8.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_eb203162bc194594bdd97f9fafce6cd8.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_eb203162bc194594bdd97f9fafce6cd8.dll">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
CgAAARAAYgYzBnEACQAOAAEAjQDxAAEAbQDxAAEAowDxAAYGNQD0AFaAawb3AFaAcgH3ABEAkAT7
ABEAkgH/ABEA2QADAVAgAAAAAIYISwGKAAEAWCAAAAAAhghUARAAAQBhIAAAAACGCOkAigACAGkg
AAAAAIYI/AAQAAIAciAAAAAAhggxB4oAAwB6IAAAAACGCD0HEAADAIMgAAAAAIYYkAUGAAQAjCAA
AAAAhgCnBAYABACwIgAAAACGGJAFBgAEAIMgAAAAAIMYkAUGAAQAuCIAAAAAkwg8BQcBBADkIgAA
AACTCHoBDAEEAOsiAAAAAJMIhgERAQQA8yIAAAAAlgi4BhcBBQD6IgAAAACGGJAFBgAFAAIjAAAA
AJEYlgUcAQUAAAABAJIDAAABAJIDAAABAJIDAAABAJIDCQCQBQEAEQCQBQYAGQCQBQoAKQCQBRAA
MQCQBRAAOQCQBRAAQQCQBRAASQCQBRAAUQCQBRAAWQCQBRAAYQCQBRAAcQCQBQYAeQCQBQYAuQCQ
BQYA2QCQBRUAaQCQBQYA6QCYAzcA6QBvBDwAkQCQBQYAkQDIA0IA+QDcAQYAAQGbBkcAmQCQBRAA
CQGcBAYADACCBV4AFADzBm4AEQHRAHMAEQGUBnkAGQGQBX8AIQEhB4YAqQAPAYoAEQGUBo4AgQBz
BpYAKQGJBpwAMQF4BaIAFAALB6sACQHWAQYAEQGUBq8AKQHEBgEAgQCQBQYAOQE5AbUAOQEUB74A
wQCQBcQA4QCQBQYACAAUAOcACAAYAOwAIABjAOwAIQBjAOwALgALADMBLgATADwBLgAbAFsBLgAj
AGQBLgArAI0BLgAzAI0BLgA7AI0BLgBDAGQBLgBLAJMBLgBTAI0BLgBbAKoBQABjAOwAQQBjAOwA
YABjAOwAYQBjAOwAYwBrAOwAgABjAOwAiQB7AFsBoABjAOwAowBzAOwAqQB7AFsBwABjAOwAIQFj
AOwAGwACAAEABQAEAAYABgAAAFgBIAEAAAABIAEAAEEHIAEAAEAFJAEAAJoBKQEAALwGLgECAAEA
AwABAAIAAwACAAMABQABAAQABQACAAUABwABAAYABwACAAsACQACAAwACwABAA0ACwACAA4ADQBX
AGcABIAAAAEAAADCItUIAAAAAAAACAAAAAQAAAAAAAAAAAAAAMwASQAAAAAAEAAAAAAAAAAAAAAA
1QDXAwAAAAAEAAAAAAAAAAAAAADMAIQEAAAAAAQAAAAAAAAAAAAAAMwAPQAAAAAADQAAAAAAAAAA
AAAA3gAgBQAAAAAAAAAAAQAAAOEFAAAtAE4AAAAAAABMaXN0YDEAU1RfZWIyMDMxNjJiYzE5NDU5
NGJkZDk3ZjlmYWZjZTZjZDgAPE1vZHVsZT4AdmFsdWVfXwBTeXN0ZW0uRGF0YQBtc2NvcmxpYgBT
eXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwA8YWxwaGFfdHdvX2NvZGU+a19fQmFja2luZ0ZpZWxk
ADxuYW1lPmtfX0JhY2tpbmdGaWVsZAA8Y291bnRyeT5rX19CYWNraW5nRmllbGQARGJDb21tYW5k
AFNxbENvbW1hbmQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X2FscGhhX3R3b19jb2RlAHNl
dF9hbHBoYV90d29fY29kZQBnZXRfTWVzc2FnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfbmFtZQBzZXRfbmFtZQBTZWN1cml0eVByb3RvY29sVHlw
ZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRT
Y3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAQ2xvc2UARGlzcG9z
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAdmFsdWUAc2V0X0V4cGVjdDEwMENvbnRp
bnVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcARG93bmxvYWRTdHJpbmcATWljcm9zb2Z0LlNx
bFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRh
c2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2ViMjAzMTYyYmMx
OTQ1OTRiZGQ5N2Y5ZmFmY2U2Y2Q4LmRsbABzZXRfU2VjdXJpdHlQcm90b2NvbABTeXN0ZW0ARW51
bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rp
b24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUlu
Zm8AZ2V0X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAEV2ZW50c09iamVjdFdy
YXBwZXIARmlyZUVycm9yAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1Rf
ZWIyMDMxNjJiYzE5NDU5NGJkZDk3ZjlmYWZjZTZjZDguUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUX2ViMjAzMTYyYmMxOTQ1OTRiZGQ5N2Y5ZmFmY2U2Y2Q4
LlByb3BlcnRpZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2
ZW50cwBDb25jYXQARGVzZXJpYWxpemVPYmplY3QAU3lzdGVtLk5ldABnZXRfRGVmYXVsdABzZXRf
VGFza1Jlc3VsdABXZWJDbGllbnQAU3lzdGVtLkRhdGEuU3FsQ2xpZW50AGdldF9DdXJyZW50AEpz
b25Db252ZXJ0AE1vdmVOZXh0AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAZ2V0X2NvdW50
cnkAc2V0X2NvdW50cnkAVW5pdmVyc2l0eQAAAQBPaAB0AHQAcAA6AC8ALwB1AG4AaQB2AGUAcgBz
AGkAdABpAGUAcwAuAGgAaQBwAG8AbABhAGIAcwAuAGMAbwBtAC8AcwBlAGEAcgBjAGgAAICVRABh
AHQAYQAgAFMAbwB1AHIAYwBlAD0ATABBAFAAVABPAFAALQBTAFYAUQAwADcAMQA1AFEAOwBJAG4A
aQB0AGkAYQBsACAAQwBhAHQAYQBsAG8AZwA9AHQAZQBzAHQAOwBJAG4AdABlAGcAcgBhAHQAZQBk
ACAAUwBlAGMAdQByAGkAdAB5AD0AVAByAHUAZQA7AAF5SQBOAFMARQBSAFQAIABJAE4AVABPACAA
VQBuAGkAdgBlAHIAcwBpAHQAeQAoAE4AYQBtAGUALAAgAEEAbABwAGgAYQBUAHcAbwBDAG8AZABl
ACwAIABDAG8AdQBuAHQAcgB5ACkAIABWAEEATABVAEUAUwAoACcAAQMnAAEFJwAnAAEJJwAsACAA
JwABBScAKQABN0UAcgByAG8AcgAgAGkAbgBzAGUAcgB0AGkAbgBnACAAdQBuAGkAdgBlAHIAcwBp
AHQAeQAgAAAFOgAgAAAZSQBuAHMAZQByAHQAIABFAHIAcgBvAHIAABtPAHUAdABlAHIAIABlAHIA
cgBvAHIAOgAgAAAXTwB1AHQAZQByACAARQByAHIAbwByAABxUwBUAF8AZQBiADIAMAAzADEANgAy
AGIAYwAxADkANAA1ADkANABiAGQAZAA5ADcAZgA5AGYAYQBmAGMAZQA2AGMAZAA4AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAABwbb5Rh4dATYuB58Ufq5peAAQgAQEI
AyAAAQUgAQEREQQgAQEOBSABARFpGwcKDhUSRQESCBJJEk0VEVEBEggSCBJVDhJVDgQAAQECBQAB
ARF5BCABDg4GEAEBHgAOCAoBFRJFARIIBhUSRQESCAggABURUQETAAYVEVEBEggEIAATAAUgAg4O
DgUAAQ4dDgYgAgEOEk0DIAAIAyAADgcABA4ODg4OBSAAEoCVBSAAEoCZCCAFAggODg4IAyAAAgUA
Ag4ODggAARKAnRGAoQUgABKApQcgAgEOEoClCLd6XFYZNOCJCImEXc2AgMyRCDCtT+aypq7tBAAA
AAAEAQAAAAIGDgIGCAMGERADBhJhAwYSZQMGEhgEAAASYQQAABJlBQABARJlBAAAEhgDAAABAygA
DgQIABJhBAgAEmUECAASGAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU1RfZWIyMDMxNjJiYzE5NDU5NGJkZDk3ZjlmYWZjZTZjZDgAAAUBAAAAABYB
ABFDb3B5cmlnaHQgQCAgMjAyNAAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRG
cmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5
c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAs
IEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0u
UmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAvDUAAAAA
AAAAAAAA1jUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMg1AAAAAAAAAAAAAAAAX0NvckRsbE1h
aW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABAEAAAAAAAAAAAAABAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQDVCMIiAAABANUIwiI/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARwAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABMAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfAGUAYgAyADAAMwAxADYAMgBiAGMAMQA5ADQANQA5ADQAYgBkAGQAOQA3AGYAOQBmAGEA
ZgBjAGUANgBjAGQAOAAAADwADgABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADgAOQA4AC4AMgAyADYAMQAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBUAF8A
ZQBiADIAMAAzADEANgAyAGIAYwAxADkANAA1ADkANABiAGQAZAA5ADcAZgA5AGYAYQBmAGMAZQA2
AGMAZAA4AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8A
cAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADQAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABl
AG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUA
AABTAFQAXwBlAGIAMgAwADMAMQA2ADIAYgBjADEAOQA0ADUAOQA0AGIAZABkADkANwBmADkAZgBh
AGYAYwBlADYAYwBkADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAA
UwBUAF8AZQBiADIAMAAzADEANgAyAGIAYwAxADkANAA1ADkANABiAGQAZAA5ADcAZgA5AGYAYQBm
AGMAZQA2AGMAZAA4AAAAQAAOAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAA
LgA4ADgAOQA4AC4AMgAyADYAMQAAAEQADgABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBv
AG4AAAAxAC4AMAAuADgAOAA5ADgALgAyADIANgAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAADoNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\Script Task"
          TopLeft="276.666651550267,179.399998752475" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>